services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - SA_PASSWORD=YourStrong!Passw0rd
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    networks:
      - mtb-net
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/1433"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 40s

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    networks:
      - mtb-net
    volumes:
      - ./mongo-data:/data/db
    command: mongod --bind_ip_all --dbpath /data/db

  auth:
    build:
      context: .
      dockerfile: AuthMicroservice/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=AuthDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True
      - Jwt__Issuer=MagicTheBeginning
      - Jwt__Audience=MagicClients
      - Jwt__Secret=TaCleSuperSecreteDoitFaireAuMoins32Chars!
      - Admin__Email=admin@mtb.local
      - Admin__Password=AdminP@ssw0rd!

    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "5001:5001"
    networks:
      - mtb-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - ./keys:/root/.aspnet/DataProtection-Keys

  card:
    build:
      context: .
      dockerfile: CardMicroservice/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - CardServiceClientSecret=SuperSecretCard
      - AuthMicroserviceBaseUrl=http://auth:5001
      - DeckMicroserviceBaseUrl=http://deck:5003
      - GatewayBaseUrl=http://gateway:5000
      - Mongo__ConnectionString=mongodb://mongo:27017
      - Mongo__Database=magic-db
      - Mongo__CardCollection=cards
      - Jwt__Issuer=MagicTheBeginning
      - Jwt__Audience=MagicClients
      - Jwt__Secret=TaCleSuperSecreteDoitFaireAuMoins32Chars!
    depends_on:
      - mongo
    ports:
      - "5002:5002"
    networks:
      - mtb-net
    dns:
      - 8.8.8.8
      - 8.8.4.4  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - ./keys:/root/.aspnet/DataProtection-Keys


  deck:
    build:
      context: .
      dockerfile: DeckMicroservice/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - AuthMicroserviceBaseUrl=http://auth:5001
      - CardMicroserviceBaseUrl=http://card:5002
      - GatewayBaseUrl=http://gateway:5000
      - DeckServiceClientSecret=SuperSecretDeck
      - Mongo__ConnectionString=mongodb://mongo:27017
      - Mongo__Database=magic-db
      - Mongo__DeckCollection=decks
      - Jwt__Issuer=MagicTheBeginning
      - Jwt__Audience=MagicClients
      - Jwt__Secret=TaCleSuperSecreteDoitFaireAuMoins32Chars!

    depends_on:
      - mongo
    ports:
      - "5003:5003"
    networks:
      - mtb-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - ./keys:/root/.aspnet/DataProtection-Keys


  game:
    build:
      context: .
      dockerfile: GameMicroservice/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5004
      - AuthMicroserviceBaseUrl=http://auth:5001
      - CardMicroserviceBaseUrl=http://card:5002
      - DeckMicroserviceBaseUrl=http://deck:5003
      - GatewayBaseUrl=http://gateway:5000
      - GameServiceClientSecret=SuperSecretGame
      - Jwt__Issuer=MagicTheBeginning
      - Jwt__Audience=MagicClients
      - Jwt__Secret=TaCleSuperSecreteDoitFaireAuMoins32Chars!
      - Mongo__ConnectionString=mongodb://mongo:27017
      - Mongo__Database=magic-db
      - Mongo__GameCollection=games


    depends_on:
      - mongo
    ports:
      - "5004:5004"
    networks:
      - mtb-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - ./keys:/root/.aspnet/DataProtection-Keys

  gateway:
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - Jwt__Issuer=MagicTheBeginning
      - Jwt__Audience=MagicClients
      - Jwt__Secret=TaCleSuperSecreteDoitFaireAuMoins32Chars!

    depends_on:
      auth:
        condition: service_healthy
      card:
        condition: service_healthy
      deck:
        condition: service_healthy
      game:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      retries: 5
      start_period: 20s
    ports:
      - "5000:5000"
    networks:
      - mtb-net

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - mtb-net

networks:
  mtb-net:
    driver: bridge



